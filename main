# Dev_@ladinh production
# hook-up platform -v2

def get_user_input(prompt, validation_function=None, error_message="Invalid input. Try again."):
    while True:
        user_input = input(prompt).strip().lower()
        if not user_input:
            print("Please enter a valid response.")
            continue
        if validation_function and not validation_function(user_input):
            print(error_message)
            continue
        return user_input

def validate_name(name):
    forbidden_names = ["nelson", "elias", "frank", "shaz", "sharon", "shiro", "vee", "bendenson", "mish", "vayo", "pamela",
                       "kevo", "brayo", "kevin", "brian", "stanley", "stano", "said", "solomon", "gladys", "ben",
                       "jane", "janet", "jux", "clinton", "rodgers", "mercy"]
    return name not in forbidden_names

def validate_number(number):
    return number.isdigit() and int(number) >= 0

def welcome_screen():
    print("\n***Welcome To The Relationship Validator Programme***")
    print("        Enjoy yourself and make yourself cool\n")

    first_name = get_user_input("Enter your first name: ", validation_function=validate_name)
    last_name = get_user_input("Enter your last name: ", validation_function=validate_name)

    print(f"\n{first_name} {last_name}, such a nice name. Let's continue with the validation.")
    age_qualify()
    
def age_qualify():
    age_input = int(get_user_input("\nWhat's your age? (in years): ",
                               validation_function=validate_number,
                               error_message="Please enter a valid number for the duration."))
    if age_input == "":
        print("Please enter a valid number for the duration.")
    elif age_input < 18:
        print("You must be 18 years and above.\n")
        play_again()
    else:
        print("You are right to go.")
    status()

def status():
    status_input = get_user_input("\nWhat's your relationship status? {single or married}: ",
                                   validation_function=lambda x: x in ["single", "married"],
                                   error_message="Invalid status. Please enter 'single' or 'married'.")
    if status_input == "single":
        single()
    elif status_input == "married":
        married()

def single():
    gender = get_user_input("\nWhat's your gender? {male or female}: ",
                            validation_function=lambda x: x in ["male", "female"],
                            error_message="Invalid gender. Please enter 'male' or 'female'.")

    duration = int(get_user_input("\nHow long have you been single (in years)? ",
                              validation_function=validate_number,
                              error_message="Please enter a valid number for the duration."))

    if gender == "male":
        handle_male_single(duration)
    elif gender == "female":
        handle_female_single(duration)

def handle_male_single(duration):
    if duration <= 1:
        handle_heartbroken()
    elif duration <= 3:
        print("\nCongrats for staying solo for that long time. It seems things didn't go as expected.")
    else:
        print("\nI'm sorry, it seems you're having difficulty healing from your previous relationship.")

    kids()

def handle_female_single(duration):
    if duration <= 1:
        handle_heartbroken()
    elif duration <= 3:
        print("\nThat's amazing! Being single for that long is not easy as a woman. I understand you lady")
    else:
        print("\nDon't give up! It's never too late.")

    kids()

def handle_heartbroken():
    reason = input("\nOops! Sorry to hear that. What was the core cause of your break-up? -> ")
    print(f"\nThat was tough but have hopes that all will be fine soon. \nRemember, we men we don't force things, we leave them to happen the way they are.")

    kids()

def married():
    gender = get_user_input("\nWhat is your gender? {male or female}: ",
                            validation_function=lambda x: x in ["male", "female"],
                            error_message="Invalid gender entry. Please enter 'male' or 'female'.")

    if gender == "female":
        print("\nYou are not needed here. May you find light.\n")
    elif gender == "male":
        print("\nYou are free to go. You have been permitted by GOD.")
        kids()
    else:
        print("\nWe don't deal with any form of homosexuality here. You either be a man or a woman.")

def kids():
    kids_number = get_user_input("\nHow many kids do you have?: ",
                                 validation_function=validate_number,
                                 error_message="Please enter a valid number for the kid(s) number.")

    if int(kids_number) == 0:
        print("\nAll is cool. That's a good start. I hope all will be cool.")
        car_ownership()
    elif int(kids_number) == 1:
        handle_single_child()
    else:
        boys = get_user_input("\nHow many male kids do you have?: ",
                              validation_function=validate_number,
                              error_message="Please enter a valid number for the male kid(s).")
        girls = get_user_input("\nHow many female kids do you have?: ",
                               validation_function=validate_number,
                               error_message="Please enter a valid number for the female kid(s).")
        print(f"\nWOW!! {boys} boys and {girls} girls. That's a great achievement and accomplishment in life.")
        car_ownership()

def handle_single_child():
    gender = get_user_input("\nWhat's the kid's gender? {male or female}: ",
                            validation_function=lambda x: x in ["male", "female"],
                            error_message="Invalid gender. Please enter 'male' or 'female'.")
    kid_name = get_user_input("\nWhat's the name of your child?: ", validation_function=lambda x: len(x) > 0)

    forbiden_kid_name = ["nelson", "elias", "frank", "shaz", "sharon", "shiro", "vee", "bendenson", "mish", "vayo", "pamela",
                       "kevo", "brayo", "kevin", "brian", "stanley", "stano", "said", "solomon", "gladys", "ben",
                       "jane", "janet", "jux"]
    if kid_name.lower() in forbiden_kid_name:
        print(f"\nOops!! {kid_name} seems to be a popular player name. Take caution with your child.")
    else:
        print(f"\nOh!! {kid_name}, such a nice name. I wish the best in life for him/her.")

    car_ownership()

def car_ownership():
    car_ownership_input = get_user_input("\nDo you own a car in your life? {yes or no}: ",
                                          validation_function=lambda x: x in ["yes", "no"],
                                          error_message="Invalid input. Please enter 'yes' or 'no'.")
    if car_ownership_input == "yes":
        print("\nThat's awesome for your hardwork fellow citizen.")
        house_ownership()
    elif car_ownership_input == "no":
        print("\nIt's cool. Hope you'll own one in the future.")
        house_ownership()

def house_ownership():
    house_ownership_input = get_user_input("\nDo you own a house? {yes or no}: ",
                                            validation_function=lambda x: x in ["yes", "no"],
                                            error_message="Invalid input. Please enter 'yes' or 'no'.")
    if house_ownership_input == "yes":
        print("\nThat's amazing! Having a house is an essential basic need one need to have. Big up!")
        net_worth()
    elif house_ownership_input == "no":
        print("\nIt's cool. I'm sure owning yours is in your future plans this year.")
        net_worth()

def net_worth():
    net_worth_input = get_user_input("\nWhat's your net worth? (in 100,000s): ",
                                     validation_function=validate_number,
                                     error_message="Please enter a valid number for the net worth.")
    net_worth_value = int(net_worth_input)
    
    if net_worth_value == 0:
        print("\nYou need to be serious with yourself and your life. Strive for a better future.")
    elif net_worth_value <= 10000:
        print("\nThat's shocking. You need to focus on making more money.")
    elif net_worth_value <= 50000:
        print("\nYou are behind. This net worth can only cater for a date without enjoying it's luxury.")
    elif net_worth_value <= 100000:
        print("\nIt seems you can do better. Keep focusing to make more money. Cheers!")
    elif net_worth_value > 100000:
        print("\nCongrats! You deserve an applause. We can be business associates. Remember to keep assets higher than liabilities.")
    else:
        print("\n!!ERROR!! Please enter your net worth accordingly and in figures.")

    user_agreement()

def user_agreement():
    print("\n**User Agreement and Legal Terms and Conditions**")
    user_answer = get_user_input("Do you agree with the user legal terms and conditions? {yes or no}: ",
                                  validation_function=lambda x: x in ["yes", "no"],
                                  error_message="Invalid input. Please enter 'yes' or 'no'.")
    if user_answer == "yes":
        print("\nIt was a pleasure getting to know you. \nWelcome next time to the relationship validator program.\n")
    elif user_answer == "no":
        print("\n!!ERROR!! You have to agree with the user agreement terms and conditions.")
    else:
        print("\n!!ERROR!! Please respond with the options provided.")

    play_again()

def play_again():
    user_input = get_user_input("\nDo you wish to run the program again? {yes or no}: ",
                                 validation_function=lambda x: x in ["yes", "no"],
                                 error_message="Invalid input. Please enter 'yes' or 'no'.")
    if user_input == "yes":
        welcome_screen()
    else:
        print("\nCool! You are welcomed again next time. Hope you enjoyed navigating through the program. :)\n")
welcome_screen()
